name: ci-cd-pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  run-java-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 전체 히스토리를 가져와서 최신 상태를 보장

      - name: Set up JDK21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge target branch
        run: git merge origin/main

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        run: ./gradlew clean build -x test

  build-image:
    needs: run-java-gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 전체 히스토리를 가져와서 최신 상태를 보장

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge target branch
        run: git merge origin/main

      - name: Docker build & push to docker repo
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cinetalk-back-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/cinetalk-back-app

  cd-pipeline:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge target branch
        run: git merge origin/develop

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          username: ec2-user
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/cinetalk-back
            docker-compose -f docker-compose.yml up -d --build