name: ci-cd-pipeline
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
jobs:
  run-java-gradle:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        run: ./gradlew clean build -x test

  build-image:
    needs: run-java-gradle
    runs-on: self-hosted
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: build and release to DockerHub
#        env:
#          NAME: kallis0926
#          APP: cinetalk-back
#        run: |
#          docker build -t kallis0926/cinetalk-back -f ./Dockerfile .
#          docker push kallis0926/cinetalk-back

  cd-pipeline:
    needs: build-image
    name: continuous deploy
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_PEM_KEY }}
          port: 22
          script: cd /home/ec2-user/cinetalk-back && docker-compose -f docker-compose.yml up -d --build