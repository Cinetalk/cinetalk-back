name: ci-cd-pipeline
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  run-java-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
      - name: Docker build & push to docker repo
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/dev .
          docker push ${{ secrets.DOCKER_USERNAME }}/dev

#  build-image:
#    needs: run-java-gradle
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/cinetalk-back-app:latest .

  cd-pipeline:
    needs: run-java-gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          username: ec2-user
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/cinetalk-back
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cinetalk-back-app
            docker-compose -f docker-compose.yml up -d --build
            docker image prune -f
