version: "3.8"                                # 파일 규격 버전
services: # 이 항목 밑에 실행하려는 컨테이너들을 정의
  cinetalk-back-redis: # 서비스명
    container_name: cinetalk-back-redis       # 컨테이너 명
    build:
      dockerfile: Dockerfile
      context: ./redis
    image: ${DOCKER_USERNAME}/cinetalk-back-app
    ports:
      - "6379:6379"
  cinetalk-back-database:
    container_name: cinetalk-back-database
    build:
      dockerfile: Dockerfile
      context: ./database
    image: ${DOCKER_USERNAME}/cinetalk-back-app
    environment:
      - MARIADB_DATABASE=cinetalk-back-database
      - MARIADB_ROOT_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - ./database/config:/etc/mysql/conf.d
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"      # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
  cinetalk-back-app:
    container_name: cinetalk-back-app
    build: .
    depends_on: # DB, REDIS 컨테이너가 실행된 다음 WEB을 실행시킨다.
      - cinetalk-back-database
      - cinetalk-back-redis
    image: ${DOCKER_USERNAME}/cinetalk-back-app
    environment:
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JWT_SECRET=${JWT_SECRET}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
      - NAVER_REDIRECT_URI=${NAVER_REDIRECT_URI}
      - NAVER_AUTHORIZATION_GRANT_TYPE=${NAVER_AUTHORIZATION_GRANT_TYPE}
      - NAVER_SCOPE${NAVER_SCOPE}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - GOOGLE_AUTHORIZATION_GRANT_TYPE=${GOOGLE_AUTHORIZATION_GRANT_TYPE}
      - GOOGLE_SCOPE=${GOOGLE_SCOPE}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SERCRET=${KAKAO_CLIENT_SERCRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - KAKAO_AUTHORIZATION_GRANT_TYPE=${KAKAO_AUTHORIZATION_GRANT_TYPE}
      - KAKAO_CLIENT_AUTHENTICATION_METHOD=${KAKAO_CLIENT_AUTHENTICATION_METHOD}
      - KAKAO_SCOPE=${KAKAO_SCOPE}
      - PROVIDER_NAVER_AUTHORIZATION_URI=${PROVIDER_NAVER_AUTHORIZATION_URI}
      - PROVIDER_NAVER_TOKEN_URI=${PROVIDER_NAVER_TOKEN_URI}
      - PROVIDER_NAVER_USER_INFO_URI=${PROVIDER_NAVER_USER_INFO_URI}
      - PROVIDER_NAVER_USER_NAME_ATTRIBUTE=${PROVIDER_NAVER_USER_NAME_ATTRIBUTE}
      - PROVIDER_KAKAO_AUTHORIZATION_URI=${PROVIDER_KAKAO_AUTHORIZATION_URI}
      - PROVIDER_KAKAO_TOKEN_URI=${PROVIDER_KAKAO_TOKEN_URI}
      - PROVIDER_KAKAO_USER_INFO_URI=${PROVIDER_KAKAO_USER_INFO_URI}
      - PROVIDER_KAKAO_USER_NAME_ATTRIBUTE=${PROVIDER_KAKAO_USER_NAME_ATTRIBUTE}

    ports:
      - "80:8080"
    restart: always # depends on은 실행 순서만 컨트롤 할뿐,
    # 컨테이너 안의 서비스가 실행가능한 상태인지까지는 확인 하지 않기 때문에
    # DB 또는 Redis가 아직 실행가능한 상태가 아니여서 실패하는 경우 재시작 하도록 설정
