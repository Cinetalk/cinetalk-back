buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

bootJar {
    archiveFileName = 'app.jar'
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // [2] QueryDSL 라이브러리
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //형태소 분석 API
    implementation 'com.github.shin285:KOMORAN:3.3.9'

    implementation 'com.github.mwiede:jsch:0.2.16'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation 'org.scala-lang:scala-library:2.12.10'
    testImplementation 'com.twitter.penguin:korean-text:4.4.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}


compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

// [3] Querydsl 설정부
def generated = 'src/main/generated'

// [4] querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// [5] java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// [6] gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}